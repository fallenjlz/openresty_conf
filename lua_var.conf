server {
	listen 80;
	server_name testnginx.com;

    location ~ ^/([a-z]+)/var.html {
        set $a '';
        set $b '';
        set $c '';
        set $d '';
        rewrite_by_lua_block {
            local nginx = require "ngx"
            ngx.var.a = 1
            ngx.var.b = ngx.var.http_user_agent
            ngx.var.c = ngx.var.arg_test
            ngx.var.d = nginx.var[1]
        }
        echo $a;
        echo $b;
        echo $c;
        echo $d;
    }
	location ^~ /setheader {
		content_by_lua_block{
    		local ngx = require "ngx";
    		ngx.req.set_header("test",{"1","2"});
		}
	}	
	location ^~ /getheader {
		content_by_lua_block{
    		local ngx = require "ngx";
    	 	local h = ngx.req.get_headers()
			for k,v in pairs(h) do
				ngx.say('Header name: ',k,'Value: ',v)
			end
		ngx.say(h['host'])
		}
	}
	location ^~ /respheader {
		content_by_lua_block{
    		local ngx = require "ngx";
    	 	local h = ngx.resp.get_headers()
			for k,v in pairs(h) do
				ngx.say('Header name: ',k,'Value: ',v)
			end
		ngx.say(h["content-type"])
		}
	}
	location ^~ /uripath {
		content_by_lua_block{
    		local ngx = require "ngx";
    	 	local url = ngx.var.request_uri
		    ngx.say(url)
		}
	}
	location ^~ /getstrbody {
		root /data/test;
		index index.html index.htm;
		content_by_lua_block {
			local ngx = require "ngx";
			ngx.req.read_body()
			local data = ngx.req.get_body_data()
			if data then
				ngx.print('ngx.req.get_body_data: ',data, ' ------ type is ',type(data))
				return 
			else
				local file =  ngx.req.get_body_file()
				if file then
					ngx.say("body is in file ", file)
				else
					ngx.say("nobody found")
				end
			end
		}
	}
	
}
